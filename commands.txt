kubectl -n awx logs -f deployments/awx-operator-controller-manager
kubectl -n awx get awx,all,ingress,secrets

---
credentials:
  MockDevice1:
    ansible_host: 192.168.1.1
    ansible_user: admin
    ansible_ssh_pass: Ansible123!
  MockDevice2:
    ansible_host: 192.168.1.2
    ansible_user: admin
    ansible_ssh_pass: Ansible123!
---
- name: Simple playbook for network devices
  hosts: all
  gather_facts: no
  vars:
    ansible_user: admin
    ansible_password: Ansible123!
    ansible_network_os: ios
  tasks:
    - name: Show version
      ios_command:
        commands:
          - show version
      register: result
    - debug: var=result.stdout_lines

all:
  hosts:
    Mock-Device1:
      ansible_host: 192.168.2.1
      ansible_user: admin
      ansible_ssh_pass: Ansible123!
    Mock-Device2:
      ansible_host: 192.168.2.2
      ansible_user: admin
      ansible_ssh_pass: Ansible123!

- name: Ping mock devices
  hosts: all
  tasks:
    - name: Ping device
      ping:


Cannot parse as JSON (error: Expecting value: line 1 column 1 (char 0)) or YAML (error: Input type `list` is not a dictionary).

SSH password: 
PLAY [Ping mock devices] *******************************************************
TASK [Ping device] *************************************************************
fatal: [Mock-Device2]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname mock-device2: Name or service not known", "unreachable": true}
fatal: [Mock-Device1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname mock-device1: Name or service not known", "unreachable": true}
PLAY RECAP *********************************************************************
Mock-Device1               : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
Mock-Device2               : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0
